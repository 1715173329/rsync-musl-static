name: rsync-static-build

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container: alpine:latest
    env:
      XXHASH_VER: "0.8.2"
      RSYNC_VER: "3.2.7"
    steps:
      - name: Install build dependencies
        run: |
          apk add --no-cache curl gcc g++ make
          apk add --no-cache acl-dev attr-dev lz4-dev lz4-static openssl-dev openssl-libs-static popt-dev popt-static \
            zlib-dev zlib-static zstd-dev zstd-static

      - name: Build static xxHash
        run: |
          curl -fL "https://codeload.github.com/Cyan4973/xxHash/tar.gz/v$XXHASH_VER" -o "xxHash-$XXHASH_VER.tar.gz"
          tar -zxf "xxHash-$XXHASH_VER.tar.gz"
          cd "xxHash-$XXHASH_VER"
          CFLAGS="-fPIC -DPIC -O2" make -j"$(nproc)"
          cd -

      - name: Build static rsync
        run: |
          curl -fL "https://download.samba.org/pub/rsync/src/rsync-$RSYNC_VER.tar.gz" -o "rsync-$RSYNC_VER.tar.gz"
          tar -zxf "rsync-$RSYNC_VER.tar.gz"
          cd "rsync-$RSYNC_VER"
          CFLAGS="-fPIC -DPIC -flto -O2 -static -I../xxHash-$XXHASH_VER" LDFLAGS="-lpthread -ldl -L../xxHash-$XXHASH_VER" \
            ./configure --disable-md2man
          make -j"$(nproc)"
          strip rsync
          cp -fp rsync rsync-ssl ..
          cd -

      - name: Store rsync builds
        uses: actions/upload-artifact@v3
        if: "!startsWith(github.ref, 'refs/tags/v')"
        with:
          name: rsync-musl-static
          path: |
            rsync
            rsync-ssl

      - name: Release rsync builds
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/v')"
        with:
          overwrite: true
          repo_token: ${{ github.token }}
          tag: ${{ github.ref }}
          file: "@(rsync|rsync-ssl)"
          file_glob: true
